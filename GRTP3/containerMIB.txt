CONTAINERMIB DEFINITIONS ::= BEGIN

--
-- Example MIB objects for agent module example implementations
--

--
-- Imports para aquilo que iremos utilizar na definição da MIB
--
IMPORTS
    MODULE-IDENTITY, OBJECT-TYPE, Integer32, experimental,
    NOTIFICATION-TYPE                       FROM SNMPv2-SMI
    SnmpAdminString                         FROM SNMP-FRAMEWORK-MIB
    RowStatus, StorageType, DisplayString,
    TruthValue                              FROM SNMPv2-TC
    InetAddressType, InetAddress            FROM INET-ADDRESS-MIB
;

--
-- Tirar dúvida acerca do experimental! containers é o nível mais alto
--
containers MODULE-IDENTITY
    LAST-UPDATED "201812121623Z" -- tem de ter REVISION com esta data!
    ORGANIZATION "www.di.uminho.pt"
    CONTACT-INFO    
	 "postal:   Departamento de Informatica
                Campus de Gualtar
                4710-057 BRAGA
                Portugal
      email:    bmfs@di.uminho.pt"
    DESCRIPTION
	    "MIB objects for docker monitoring"
    REVISION     "201812121623Z"  -- tem de ser igual a LAST-UPDATE!
    DESCRIPTION
        "Primeira versao"
    ::= { experimental 2019 }

--
-- Start of containershipParam - grupo com objetos que representam um container novo a ser criado!
--
containershipParam OBJECT IDENTIFIER ::= { containers 1 }


-- Será colocado abaixo do containershipParam e indica o indicie da imagem a ser usada pelo container
indexParam OBJECT-TYPE
    SYNTAX      DisplayString
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
	"Identificador do nome da imagem a ser usada pelo container"
    ::= { containershipParam 1 }


-- Será colocado abaixo do containershipParam e indica o nome do container a ser criado
nomeParam OBJECT-TYPE
    SYNTAX      DisplayString
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
	"Nome do container"
    ::= { containershipParam 2 }

--Será colocado abaixo do containershipParam e serve como uma flag
--Após a ativação da flag  (sinalizando a criação do container) dever ser efetuado um reset a todos os objetos deste grupo
flagParam OBJECT-TYPE
    SYNTAX      Integer32 (0..1)
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
	"Flag do container"
    ::= { containershipParam 3 }

-- Será colocado abaixo do containershipParam e indica o indicie da imagem a ser usada pelo container
indexIParam OBJECT-TYPE
    SYNTAX      Integer32
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
	"Identificador do indice da imagem a ser usada pelo container"
    ::= { containershipParam 4 }

--
-- End of containershipParam
--


--
-- Start of containershipImageTable - grupo com a tabela de imagens disponíveis
--
containershipImageTable OBJECT-TYPE
    SYNTAX      SEQUENCE OF IMAGETableEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
	"A tabela contem todas as imagens disponiveis, com duas colunas (indice de entrada) e nome da imagem"
    ::= { containers 2 }

-- Necessário definir o tipo, cada objeto deste tipo representa uma entrada na tabela
IMAGETableEntry ::= SEQUENCE {
	indexImage	    Integer32,
	image	    DisplayString
}

-- Um entrada na tabela, com a syntax que foi definida acima!
imageTableEntry OBJECT-TYPE
    SYNTAX      IMAGETableEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
	"Uma linha da tabela de imagens"
    INDEX   { indexImage }
    ::= {containershipImageTable 1 }

-- Chave da tabela, meramente para fazer indexação
indexImage OBJECT-TYPE
    SYNTAX      Integer32 (1..32)
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
	"Identificador da imagem (unico)"
    ::= { imageTableEntry 1 }

-- Nome da imagem a ser utilizada no novo container
image OBJECT-TYPE
    SYNTAX      DisplayString
    MAX-ACCESS  read-write
    STATUS      current
    DESCRIPTION
	"Nome da imagem"
    ::= { imageTableEntry 2 }


--
-- END of containershipImageTable
--

--
--Start of containershipContainerTable - grupo com a tabela de containers que foram criados
--
containershipContainerTable OBJECT-TYPE
    SYNTAX      SEQUENCE OF CONTAINERTableEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
	"A tabela contem os containers que foram criados, com quatro colunas- indice de entrada, nome do container, indice da imagem que o originou e o seu estado"
    ::= { containers 3 }

--Necessário definir o tipo de cada entrada na tabela
CONTAINERTableEntry ::= SEQUENCE {
    indexContainer      Integer32,
    containName	        DisplayString,
    imageIndex          Integer32,
    statusC             Integer32,
    processador         Integer32,
    containerID         DisplayString
}

-- Uma entrada na tabela, com a syntax já definida acima!
containerTableEntry OBJECT-TYPE
    SYNTAX      CONTAINERTableEntry
    MAX-ACCESS  not-accessible
    STATUS      current
    DESCRIPTION
	"Uma linha da tabela de containers"
    INDEX   { indexContainer }
    ::= {containershipContainerTable 1 }

-- Indice, meramente para indexação
indexContainer OBJECT-TYPE
    SYNTAX      Integer32(1..32)
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
	"Indice de entrada na tabela"
    ::= { containerTableEntry 1 }

-- Define o nome do container referente à entrada deste
containName OBJECT-TYPE
    SYNTAX      DisplayString
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
	"Nome do container"
    ::= { containerTableEntry 2 }

-- Define o indice em que esta se encontrava na tabela containershipImageTable
imageIndex OBJECT-TYPE
    SYNTAX      Integer32
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
	"Indice da imagem que originou o container"
    ::= { containerTableEntry 3 }

-- Representa o estado do container (up-1,down-2,removing-3,creating-4,changing-5)
statusC OBJECT-TYPE
    SYNTAX      Integer32(1..5)
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
	"Estado do container"
    ::= { containerTableEntry 4 }

-- Indica a percentagem de processador a ser utilizado
processador OBJECT-TYPE
    SYNTAX      Integer32(1..100)
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
	"Percentagem de processador a ser utilizada"
    ::= { containerTableEntry 5 }

-- Define o ID do container no sistema do dockercriado
containerID OBJECT-TYPE
    SYNTAX      DisplayString
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
	"Nome do container"
    ::= { containerTableEntry 6 }

--
-- End of containershipContainerTable
--

--
--Star of status-grupo com objetos escalares que representam informações acerca do agente!
-- Podemos adicionar mais parametros se acharmos pertinente
--
status OBJECT IDENTIFIER ::= { containers 4 }

data OBJECT-TYPE 
    SYNTAX      DisplayString
    MAX-ACCESS  read-only
    STATUS      current
    DESCRIPTION
    "Data em que o agente foi criado"
    ::= { status 1 }

contador OBJECT-TYPE
    SYNTAX Integer32
    MAX-ACCESS read-write
    STATUS current
    DESCRIPTION
    "Número de containers criados neste agente até ao momento"
    ::= { status 2 }

--
-- END of status
--

END